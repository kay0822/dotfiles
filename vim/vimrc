set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
"Plugin 'ascenator/L9', {'name': 'newL9'}

"""   ____    _____    ____   ___   _   _ 
"""  | __ )  | ____|  / ___| |_ _| | \ | |
"""  |  _ \  |  _|   | |  _   | |  |  \| |
"""  | |_) | | |___  | |_| |  | |  | |\  |
"""  |____/  |_____|  \____| |___| |_| \_|
"""                                       

"""
""" vim-devicons 
"""
"Plugin 'ryanoasis/vim-devicons'



"""
""" nerdtree
"""
Plugin 'scrooloose/nerdtree'
let g:NERDTreeMouseMode=3 
let g:NERDTreeWinPos = "right"

" 默认打开nerdtree
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd w

" 如果没有任何输入文件时，默认打开nerdtree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" 如果只有一个nerdtree窗口还开着，自动关闭
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
map <C-n> :NERDTreeToggle<CR>


"""
""" nerd-commenter
"""
Plugin 'scrooloose/nerdcommenter'
map <C-\> <plug>NERDCommenterToggle<CR>
nmap <Leader>cc <Plug>NERDCommenterComment
xmap <Leader>cc <Plug>NERDCommenterComment
nmap <Leader>c<Space> <Plug>NERDCommenterToggle
xmap <Leader>C<Space> <Plug>NERDCommenterToggle
nmap <Leader>cm <Plug>NERDCommenterMinimal
xmap <Leader>cm <Plug>NERDCommenterMinimal
nmap <Leader>cs <Plug>NERDCommenterSexy
xmap <Leader>cs <Plug>NERDCommenterSexy
nmap <Leader>ci <Plug>NERDCommenterInvert
xmap <Leader>ci <Plug>NERDCommenterInvert
nmap <Leader>cy <Plug>NERDCommenterYank
xmap <Leader>cy <Plug>NERDCommenterYank
nmap <Leader>cl <Plug>NERDCommenterAlignLeft
xmap <Leader>cl <Plug>NERDCommenterAlignLeft
nmap <Leader>cb <Plug>NERDCommenterAlignBoth
xmap <Leader>cb <Plug>NERDCommenterAlignBoth
nmap <Leader>cn <Plug>NERDCommenterNest
xmap <Leader>cn <Plug>NERDCommenterNest
nmap <Leader>cu <Plug>NERDCommenterUncomment
xmap <Leader>cu <Plug>NERDCommenterUncomment
nmap <Leader>c$ <Plug>NERDCommenterToEOL
xmap <Leader>c$ <Plug>NERDCommenterToEOL
nmap <Leader>cA <Plug>NERDCommenterAppend
xmap <Leader>cA <Plug>NERDCommenterAppend
nmap <Leader>ca <Plug>NERDCommenterAltDelims
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code
" indentation
let g:NERDDefaultAlign = 'left'
" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1
" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1


"""
""" vim-airline		http://vimawesome.com/plugin/vim-airline
"""
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
" Automatically displays all buffers when there's only one tab open.
let g:airline#extensions#tabline#enabled = 1
" Show buffer number
let g:airline#extensions#tabline#buffer_nr_show = 1 
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

"let g:airline#extensions#tabline#left_sep = ' '
"let g:airline#extensions#tabline#left_alt_sep = '|'
nnoremap <leader>p :bprevious<CR>
nnoremap <leader>n :bnext<CR>
nnoremap <leader>1 :b 1<CR>
nnoremap <leader>2 :b 2<CR>
nnoremap <leader>3 :b 3<CR>
nnoremap <leader>4 :b 4<CR>
nnoremap <leader>5 :b 5<CR>
nnoremap <leader>6 :b 6<CR>
nnoremap <leader>7 :b 7<CR>
nnoremap <leader>8 :b 8<CR>
nnoremap <leader>9 :b 9<CR>


"""
""" bclose		http://vimawesome.com/plugin/bclose-vim-state-of-grace
""" 
Plugin 'rbgrouleff/bclose.vim'
nnoremap <leader>bc :Bclose<CR>


"""
""" youcompleteme  
"""
Plugin 'valloric/youcompleteme'
"
" # cd ~/.vim/bundle/youcompleteme
" # ./install.py --clang-completer
" # * 针对不同项目，在项目目录下放一个.ycm_extra_conf.py
" # ln -fs
" ~/.vim/bundle/youcompleteme/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py
" <proj>/.ycm_extra_conf.py
"
let g:ycm_global_ycm_extra_conf = '~/.vim/bundle/youcompleteme/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '>*'
nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
"nmap <F4> :YcmDiags<CR>

" # 关联ctags的文件
let g:ycm_collect_identifiers_from_tag_files = 1  

" # 默认情况下，加载目录下的.ycm_extra_conf.py文件需要确认，取消这个确认操作
let g:ycm_confirm_extra_conf = 0

" # youcompleteme 与 syntastic冲突，如果要启用syntastic，将diagnostics_ui关闭
"let g:ycm_show_diagnostics_ui = 0

" # 总是显示错误或引用的位置列表
let g:ycm_always_populate_location_list = 1


"""
""" syntastic
"""
"
" 可以通过:SyntasticInfo <filetype>查看状态
" <proj>/.syntastic_clang_check_config 和 <proj>/.syntastic_cppcheck_config
" 用于扩展cflags
"
"Plugin 'scrooloose/syntastic'
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
"let g:syntastic_cpp_remove_include_errors = 1
"let g:syntastic_c_remove_include_errors = 1
"let g:syntastic_cpp_check_header = 1
"let g:syntastic_c_check_header = 1
"let g:syntastic_cpp_checkers = ['cppcheck']
"let g:syntastic_c_checkers = ['clang_check']


"""
""" ctrlp	https://github.com/ctrlpvim/ctrlp.vim
"""
Plugin 'ctrlpvim/ctrlp.vim'
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

" # 默认使用正则表达式搜索。<C-r>切换
let g:ctrlp_regexp = 1

" # 默认按文件名搜索。<C-d>切换
let g:ctrlp_by_filename = 1

Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
Plugin 'ReplaceWithRegister'
Plugin 'kana/vim-textobj-entire'
Plugin 'kana/vim-textobj-user'
Plugin 'kana/vim-textobj-line'

"""
""" vim-tags
"""
Plugin 'szw/vim-tags'



"""
""" tagbar  # 右侧的symbol table
"""
Plugin 'majutsushi/tagbar'
autocmd VimEnter * TagbarToggle
nmap <F8> :TagbarToggle<CR>
let g:tagbar_singleclick = 1
let g:tagbar_left = 1



"""
""" cscope
"""
Plugin 'brookhong/cscope.vim'
nnoremap <leader>fa :call CscopeFindInteractive(expand('<cword>'))<CR>
nnoremap <leader>l :call ToggleLocationList()<CR>
" s: Find this C symbol
nnoremap  <leader>fs :call CscopeFind('s', expand('<cword>'))<CR>
" g: Find this definition
nnoremap  <leader>fg :call CscopeFind('g', expand('<cword>'))<CR>
" d: Find functions called by this function
nnoremap  <leader>fd :call CscopeFind('d', expand('<cword>'))<CR>
" c: Find functions calling this function
nnoremap  <leader>fc :call CscopeFind('c', expand('<cword>'))<CR>
" t: Find this text string
nnoremap  <leader>ft :call CscopeFind('t', expand('<cword>'))<CR>
" e: Find this egrep pattern
nnoremap  <leader>fe :call CscopeFind('e', expand('<cword>'))<CR>
" f: Find this file
nnoremap  <leader>ff :call CscopeFind('f', expand('<cword>'))<CR>
" i: Find files #including this file
nnoremap  <leader>fi :call CscopeFind('i', expand('<cword>'))<CR>



"""
""" vim-go
"""
Plugin 'fatih/vim-go'

"""   _____   _   _   ____  
"""  | ____| | \ | | |  _ \ 
"""  |  _|   |  \| | | | | |
"""  | |___  | |\  | | |_| |
"""  |_____| |_| \_| |____/ 
"""                         

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

""""""" common """"""
set ignorecase
"set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab

if has("gui_running")
	" set guifont=Monospace\ 12
	set guifont=Courier\ New\ 16
endif

" mouse click
if has('mouse')
   set mouse=a
endif

set number
set relativenumber

"set colorcolumn=100
"highlight ColorColumn ctermbg=darkgray


"""
""" window command
"""
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


nnoremap <F7> :call CscopeFindInteractive(expand('<cword>'))<CR>
nnoremap <F4> n
nnoremap <F3> N
